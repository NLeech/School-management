services:
  web:
    build: .
    image: school-management
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8080 || exit 1
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    working_dir: /School-management
    env_file:
      - .env
    environment:
      - PG_DATABASE_ADDRESS=db
      - IS_DOCKER=true
    ports:
      - "8000:8080"
    networks:
      - front-tier
      - back-tier

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
      - "./postgres_init.sh:/docker-entrypoint-initdb.d/postgres_init.sh"
    healthcheck:
      test: bash ./healthchecks/postgres.sh
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - back-tier

  # this service runs once to fill the database with random data
  # it won't run unless you specify the "fill" profile
  # docker compose --profile fill up -d
  fill:
    image: school-management
    profiles: ["fill"]
    working_dir: /School-management
    env_file:
      - .env
    environment:
      - PG_DATABASE_ADDRESS=db
      - IS_DOCKER=true
    command: python ./src/fill_database.py
    depends_on:
      web:
        condition: service_healthy
    networks:
      - back-tier
    restart: "no"

volumes:
  db-data:

networks:
  front-tier:
  back-tier: